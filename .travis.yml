language: python
group: travis_latest
dist: bionic
sudo: true

env:
    global:
        # prefix before commands - used for wine, there the prefix is "wine"
        - cPREFIX=""
        # command to launch python interpreter (its different on macOs, there we need python3)
        - cPYTHON="python"
        # command to launch pip (its different on macOs, there we need pip3)
        - cPIP="python -m pip"
        # switch off wine fix me messages
        - WINEDEBUG=fixme-all
        # mypy path
        - MYPYPATH="./lib_list/3rd_party_stubs"
        # package name
        - PACKAGE_NAME="lib_list"
        # the registered CLI Command
        - CLI_COMMAND="lib_list"
        # the source file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_SOURCE="./.docs/README_template.rst"
        # the target file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_TARGET="./README.rst"
        # secure environment variable
        - secure: "w8yTs4ZBbzmGSL+UWsDqrjVg1DnVlRbTAdJrFkehU/SMi48YfnuyaLJn4RKLrqYQOx5eeuEIdbh/g+qf06dbgwLpik3eldBeK82JzH1R3HZNe7rOulQ4sZuOj+eQalamAdEyDgTx5sWhoMhv2pkGW1QtKbvYrmFIEnr5T8S5s6hwVr8VgRAmgIRjcSHIlVIDIiKAg4Gw447tUAzJEfl51folc1ubLjDm7aOlnFNfqs4s2QJQf3FEKdVskIkDB5XhnZKSUJ9nonYZ6vd2/2unRFiiRLZ9J4TyBb4ZeAVR+NRjml2D33JELD7srleRkgn2EUkQ8v0TRKqEbt27yd+b93j/aEDBPxgQkiKy8maqFgagg26nN0STnFhxqKrxx1ykLInG5xGYfj97sovvfzsfTmFN9yksFi+qnkM//uY+tUqI/JtUnN8MYHH0fxMeNObhsGfHUmDvFDv3aeIIzbRX9oJFJthxPpLYFq8ND6ItLJ9sK9K6/CUZbjR6j1abOr1891srt+vrmfihbrB7vS4LZPm0EU0D7sdZATj5tp2ZVvaMpzc2pnPlIufF80+z9BvUDMXu/yUTvaxxFMbN+yu1R8NQGXhckD8l8+TgX2TAU8wiD/ur2osZm7/5v/p6NY4ounrcDhS5etz/slqZuy8XUu2Z3MJlNoAEkKHATtGaQes="  # CC_TEST_REPORTER_ID.secret
        - secure: "LLJt5TxmOjdTo0IagiDfEDB0hXQYNVWzZYMe0zUWI+6+pbCVXNxZsfy910mcC22bZEMoIVszTB2NXn464SRf7MDAVyVdhsdnS+FqB0b/Bzv3fuM8E2m5fazMQJxg/93QyIzZym8Q7LQzT+5lNjFUN0XKSujx9igkTQ66aF5gddtw1jXzwOfqjwN10obF5hwSVxEZXGr2ymLJS1ipXCEEairGhmXzNn+zSOoBOQuWqmR2jDaa3/11odB0UOBgaoLCn8iFqYkCyrR82Qp55O+HFOKoTeUCFOp+fiOJbfC+GAR4+2DbqdGVHi6cY0nuUSofRWFH/iP9NMG8dgQ/wHc8nT8oURDztvb5bnPWDR83wASaLfPFodrg+3tB9aMlPs8vsirw1UbmrwhydN0Yy8nhjEagon/eniGIStonPEJFHx3lMZA25JEspYxhcYNqbniENldz32WLAjWohAviJt/o3epNlRtF6H1N9Or70i56ZlnxZjSy8NVfLhsq+hwfaZ7Wi6UdpPVnifsssnQRiFzwO2HqOz/3MNa3vNRvBV9lRr4MK2dK9zgaqY/M0IUVp9Pi/O4Ww5xggSFssQ0QwcppZpD8NaHBVZMi3Indr8TQ6BXss5rJ5ZwbxySUs4TNi9WNSRI5f4alZMbSdYub6s40pYe7+ZMjO7PPuCJ6qxn9MOs="  # PYPI_PASSWORD.secret


addons:
    apt:
        packages:
            - xvfb      # install xvfb virtual framebuffer - this we need for WINE
            - winbind   # needed for WINE

services:   			# start services
  - xvfb    			# is needed for WINE on headless installation

matrix:
    include:

    - os: windows
      if: true
      language: sh
      name: "Windows Python 3.8"

      # oddly a secure password under env: global: causes that choco fails
      # so we need to put the option : filter_secrets: false
      # this can be a security issue, check that You dont leak secrets here !
      filter_secrets: false
      before_install:
          - git clone https://github.com/bitranox/lib_bash.git /usr/local/lib_bash
          - chmod -R 0755 /usr/local/lib_bash
          - chmod -R +x /usr/local/lib_bash/*.sh
          - /usr/local/lib_bash/lib_retry.sh retry choco install python3
          - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="False"
          - export MYPY_STRICT="True"   


    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.6"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.7"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="True"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.8-dev"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "pypy3"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="False"   

    - os: linux
      arch: "ppc64le"
      if: tag IS present
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="True"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "s390x"
      if: tag IS present
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="True"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "arm64"
      if: tag IS present
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="True"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: osx
      if: true
      language: sh
      name: "macOS 10.15.4"
      python: "3.8"
      osx_image: xcode11.5
      env:
        # on osx pip and python points to python 2.7 - therefore we have to use pip3 and python3 here
        - cPREFIX=""				# prefix before commands - used for wine, there the prefix is "wine"
        - cPYTHON="python3"			# command to launch python interpreter (its different on macOs, there we need python3)
        - cPIP="python3 -m pip"   	# command to launch pip (its different on macOs, there we need pip3)
        - export BUILD_DOCS="False"
        - export DEPLOY_SDIST="False"
        - export DEPLOY_WHEEL="False"
        - export DEPLOY_TEST="True"
        - export MYPY_STRICT="True"   


install:
    - ${cPIP} install lib_travis
    - log_util --colortest
    - lib_travis install

script:
    - BRANCH=$(lib_travis get_branch)
    - log_util --level=NOTICE --banner "working on branch ${BRANCH}"
    - lib_travis script

after_success:
    - lib_travis after_success
    - lib_travis deploy
    - ls -l ./dist

notifications:
  email:
    recipients:
        - bitranox@gmail.com
    # on_success default: change
    on_success: never
    on_failure: always
